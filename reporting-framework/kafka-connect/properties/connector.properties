name={CONNECT_NAME}
connector.class=io.debezium.connector.postgresql.PostgresConnector
database.hostname={DATABASE_HOSTNAME}
database.port={DATABASE_PORT}
database.user={DATABASE_USER}
database.password={DATABASE_PASSWORD}
database.dbname={DATABASE_NAME}
database.server.name={REPORTING_SERVER}
plugin.name=pgoutput
transforms=unwrap
transforms.unwrap.type=io.debezium.transforms.ExtractNewRecordState
table.whitelist={TABLE_NAME}
slot.name=debezium_{CONNECT_NAME}
key.converter=org.apache.kafka.connect.json.JsonConverter
value.converter=org.apache.kafka.connect.json.JsonConverter
key.converter.schemas.enable=true
value.converter.schemas.enable=true
group.id={CONNECT_GROUP_ID}
bootstrap.servers={CONNECT_BOOTSTRAP_SERVERS}
key.converter={CONNECT_KEY_CONVERTER}
value.converter={CONNECT_VALUE_CONVERTER}
key.converter.schemas.enable=true
value.converter.schemas.enable=true
offset.storage.topic={CONNECT_OFFSET_STORAGE_TOPIC}
offset.storage.replication.factor=1
#offset.storage.partitions=25
config.storage.topic={CONNECT_CONFIG_STORAGE_TOPIC}
config.storage.replication.factor=1
status.storage.topic=connect-status
status.storage.replication.factor=1
#status.storage.partitions=5
offset.flush.interval.ms={CONNECT_OFFSET_FLUSH_INTERVAL_MS}