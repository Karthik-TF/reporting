input {
    jdbc {
        # Postgres jdbc connection string to our database, mydb
        jdbc_connection_string => "jdbc:postgresql://sandboxv2.southindia.cloudapp.azure.com:30090/mosip_ida"

        # The user we wish to execute our statement as
        jdbc_user => "sysadmin"
        jdbc_password => "xxx"

        jdbc_validate_connection => true

        # The path to our downloaded jdbc driver
        jdbc_driver_library => ""

        # The name of the driver class for Postgresql
        jdbc_driver_class => "org.postgresql.Driver"
		
		tags => ["ida"]
		tracking_column => "request_dtimes"
		tracking_column_type => "timestamp"
		use_column_value => true
		clean_run => false
		schedule => "* * * * *"
        last_run_metadata_path => "/usr/share/logstash/configdir/lastrun/auth/auth_last_run.yml"
        record_last_run => true
        # our query
        statement => "select id, DATE(request_dtimes) as Date,request_dtimes, auth_type_code, status_code, status_comment, ref_id_type, requested_entity_type from ida.auth_transaction where request_dtimes >:sql_last_value order by request_dtimes"
    }
}
filter {
  mutate {
    gsub => [
      "status_code", "N", "Échoué",
      "status_code", "Y", "Succès",
      "requested_entity_type","PARTNER","Partenaire",
      "requested_entity_type","INTERNAL","Interne",
      "auth_type_code","DEMO-AUTH","Démographique",
      "auth_type_code","KYC-AUTH","Connaissez votre client",
      "auth_type_code","FINGERPRINT-AUTH","Empreinte digitale",
      "auth_type_code","IRIS-AUTH","Iris",
      "auth_type_code","OTP-AUTH","Mot de passe à usage unique",
      "auth_type_code","FACE-AUTH","Visage",
      "auth_type_code","OTP-REQUEST","Demande OTP"
    ]
  }
}
output {
	if "ida" in [tags]{
		elasticsearch {
			index => "authtrn"
			document_type => "authtrn"
			document_id => "%{id}"
			hosts => "10.0.0.20:9200"
			user => "elastic"
			password => "elastic"
		}
	}
}
